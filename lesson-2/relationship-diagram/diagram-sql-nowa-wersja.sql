CREATE TYPE role_type AS ENUM ('user', 'admin', 'warehouseman', 'editor');


CREATE TABLE IF NOT EXISTS "StockItem" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"shipment_id" INTEGER,
	"warehouse_id" INTEGER NOT NULL,
	"variant_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Review" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	"product_id" INTEGER NOT NULL,
	"description" TEXT,
	"rating" INTEGER NOT NULL,
	"posted_at" TIMESTAMPTZ NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "User" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"first_name" VARCHAR(40) NOT NULL,
	"last_name" VARCHAR(60) NOT NULL,
	"email" VARCHAR(255) NOT NULL,
	"password" VARCHAR(255) NOT NULL,
	"role" ROLE_TYPE NOT NULL,
	"address_id" INTEGER,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Order" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"status_id" INTEGER NOT NULL,
	"user_id" INTEGER NOT NULL,
	"delivery_method_id" INTEGER NOT NULL,
	"payment_method_id" INTEGER NOT NULL,
	"order_date" TIMESTAMPTZ NOT NULL,
	"billing_address_id" INTEGER NOT NULL,
	"shipping_address_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "DeliveryMethod" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL UNIQUE,
	"cost" DECIMAL NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "PaymentMethod" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL UNIQUE,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Shipment" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"order_id" INTEGER NOT NULL,
	"tracking_number" VARCHAR(100) UNIQUE,
	"shipped_at" TIMESTAMPTZ NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "OrderItem" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"order_id" INTEGER NOT NULL,
	"stock_item_id" INTEGER NOT NULL,
	"unit_price" DECIMAL NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Variant" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"product_id" INTEGER NOT NULL,
	"sku" VARCHAR(50) NOT NULL UNIQUE,
	"price_modifier" DECIMAL NOT NULL,
	"promotion_id" INTEGER,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Warehouse" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL UNIQUE,
	"address_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Promotion" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL,
	"discount_percentage" DECIMAL NOT NULL,
	"start_date" TIMESTAMPTZ NOT NULL,
	"end_date" TIMESTAMPTZ NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Option" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"attribute_id" INTEGER NOT NULL,
	"value" VARCHAR(100) NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Attribute" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL UNIQUE,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Manufacturer" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL UNIQUE,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Category" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255) NOT NULL,
	"parent_id" INTEGER,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Product" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"manufacturer_id" INTEGER NOT NULL,
	"name" VARCHAR(255) NOT NULL,
	"description" TEXT,
	"price" DECIMAL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "FavoriteProduct" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	"product_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Cart" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL UNIQUE,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "CartItem" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"quantity" INTEGER,
	"cart_id" INTEGER NOT NULL,
	"variant_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "ProductCategory" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"product_id" INTEGER NOT NULL,
	"category_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "ProductAttribute" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"product_id" INTEGER NOT NULL,
	"attribute_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "VariantOption" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"variant_id" INTEGER NOT NULL,
	"option_id" INTEGER NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Status" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255) NOT NULL,
	PRIMARY KEY("id")
);




CREATE TABLE IF NOT EXISTS "Address" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"street " VARCHAR(255) NOT NULL,
	"city" VARCHAR(100) NOT NULL,
	"postal_code" VARCHAR(20) NOT NULL,
	"country" VARCHAR(100) NOT NULL,
	PRIMARY KEY("id")
);



ALTER TABLE "StockItem"
ADD FOREIGN KEY("warehouse_id") REFERENCES "Warehouse"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "StockItem"
ADD FOREIGN KEY("variant_id") REFERENCES "Variant"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Review"
ADD FOREIGN KEY("user_id") REFERENCES "User"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Review"
ADD FOREIGN KEY("product_id") REFERENCES "Product"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ProductCategory"
ADD FOREIGN KEY("product_id") REFERENCES "Product"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ProductCategory"
ADD FOREIGN KEY("category_id") REFERENCES "Category"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Order"
ADD FOREIGN KEY("user_id") REFERENCES "User"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Order"
ADD FOREIGN KEY("delivery_method_id") REFERENCES "DeliveryMethod"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Order"
ADD FOREIGN KEY("payment_method_id") REFERENCES "PaymentMethod"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "OrderItem"
ADD FOREIGN KEY("order_id") REFERENCES "Order"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Cart"
ADD FOREIGN KEY("user_id") REFERENCES "User"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "CartItem"
ADD FOREIGN KEY("cart_id") REFERENCES "Cart"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "CartItem"
ADD FOREIGN KEY("variant_id") REFERENCES "Variant"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "VariantOption"
ADD FOREIGN KEY("variant_id") REFERENCES "Variant"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "VariantOption"
ADD FOREIGN KEY("option_id") REFERENCES "Option"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Variant"
ADD FOREIGN KEY("promotion_id") REFERENCES "Promotion"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Option"
ADD FOREIGN KEY("attribute_id") REFERENCES "Attribute"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "FavoriteProduct"
ADD FOREIGN KEY("user_id") REFERENCES "User"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "FavoriteProduct"
ADD FOREIGN KEY("product_id") REFERENCES "Product"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ProductAttribute"
ADD FOREIGN KEY("product_id") REFERENCES "Product"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ProductAttribute"
ADD FOREIGN KEY("attribute_id") REFERENCES "Attribute"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Product"
ADD FOREIGN KEY("manufacturer_id") REFERENCES "Manufacturer"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Variant"
ADD FOREIGN KEY("product_id") REFERENCES "Product"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "OrderItem"
ADD FOREIGN KEY("stock_item_id") REFERENCES "StockItem"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "StockItem"
ADD FOREIGN KEY("shipment_id") REFERENCES "Shipment"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Shipment"
ADD FOREIGN KEY("order_id") REFERENCES "Order"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Order"
ADD FOREIGN KEY("status_id") REFERENCES "Status"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "User"
ADD FOREIGN KEY("address_id") REFERENCES "Address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Order"
ADD FOREIGN KEY("billing_address_id") REFERENCES "Address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Order"
ADD FOREIGN KEY("shipping_address_id") REFERENCES "Address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "Warehouse"
ADD FOREIGN KEY("address_id") REFERENCES "Address"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;